version: "3.8"
services:
  psql-db:
    image: postgres
    container_name: local_pgdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      USERNAME: ${POSTGRES_USERNAME}
      PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
      POSTGRES_DB: andresdb
    volumes:
      - local_pgdata:/var/lib/postgresql/data
    healthcheck:
      # used in flask container depends_on condition to wait for the DB to be ready
      # test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} " ]
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 5s
      timeout: 20s
      retries: 555
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: andres@domain.com
      PGADMIN_DEFAULT_PASSWORD: andres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - frontend
      - backend

  flask-backend:
    build: flask
    container_name: flask-backend
    ports:
      - "5000:5000"
    depends_on:
      psql-db:
        # waiting for the database to be ready
        condition: service_healthy
    environment:
      USERNAME: ${POSTGRES_USERNAME}
      PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB_NAME}
      HOSTNAME: ${HOSTNAME}
      PORT: ${POSTGRES_PORT}
    volumes:
      - ./flask/app:/app/app
    networks:
      - frontend
      - backend
volumes:
  local_pgdata:
  pgadmin_data:

networks:
  frontend:
    # Specify driver options
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
  backend:
    # Use a custom driver
    driver: bridge
